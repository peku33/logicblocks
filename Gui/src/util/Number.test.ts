import * as Number from "./Number";

it.each([
  [3.5e12, 3, "3.500T"],
  [2e9, 2, "2.00G"],
  [1e6, 1, "1.0M"],
  [4700, 2, "4.70k"],
  [1337, 1, "1.3k"],
  [1001, 3, "1.001k"],
  [1001, 2, "1.00k"],
  [1001, 0, "1k"],
  [1000, 0, "1k"],
  [999.9099999999999, 2, "999.90"],
  [999.99, 2, "999.99"],
  [999.99, 0, "999"],
  [1, 2, "1.00"],
  [1, 0, "1"],
  [0, 2, "0.00"],
  [0.999, 0, "999m"],
  [0.9999, 0, "999m"],
  [0.9999999999999999, 1, "999.9m"],
  [-1, 1, "-1.0"],
  [-0.0001, 0, "-100µ"],
  [-0.000001, 0, "-1µ"],
  [-0.0000015, 1, "-1.5µ"],
  [-0.0000015, 2, "-1.50µ"],
  [999e-9, 1, "999.0n"],
  [1e-12, 0, "1p"],
  [1e-15, 5, "0.00100p"],
])("formats %p with %p as %p", (value: number, fractionDigits: number, expected: string) => {
  expect(Number.formatSI(value, fractionDigits, undefined)).toEqual(expected);
});
